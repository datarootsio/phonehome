name: ph release
on: push

env:
  gcp_project_id: phonehome-339613

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - run: go get -u github.com/swaggo/swag/cmd/swag
      - run: swag init
        working-directory: ./server
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: docs/*
          commit_message: Docs generation

      
  tests:
    env:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_PASS: testpass
      PG_USER: testuser
      PG_DATABASE: phonehome

    runs-on: ubuntu-latest
    container: ubuntu:latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.PG_DATABASE }}
          POSTGRES_PASSWORD: ${{ env.PG_PASS }}
          POSTGRES_PORT: ${{ env.PG_PORT }}
          POSTGRES_USER: ${{ env.PG_USER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - run: apt-get update && apt-get install -y ca-certificates
      - run: go test ./... -coverprofile=coverage.out
        working-directory: ./server
        env:
          CGO_ENABLED: 0
      - run: go tool cover -o coverage.html -html=coverage.out
        working-directory: ./server
      - uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./server/coverage.html

  build-static-site:
    needs: tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install
        working-directory: ./ui
      - run: npm run build
        working-directory: ./ui
      - uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_TF_SA_CREDENTIALS }}'
      - uses: google-github-actions/setup-gcloud@v0
      - run: gsutil -m copy -r ./public/* gs://phonehome-website
        working-directory: ./ui
      # cov report
      - uses: actions/download-artifact@v2
        with:
          name: coverage-report
      - run: gsutil copy coverage.html gs://phonehome-website


  deploy-docker:
    needs: [tests, docs]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: ["server"]
    steps:
      - uses: actions/checkout@v2
      - uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_TF_SA_CREDENTIALS }}'
      - uses: google-github-actions/setup-gcloud@v0
      - name: Docker login
        run: gcloud auth configure-docker europe-west1-docker.pkg.dev
      - name: Define Docker tag
        run: echo "DOCKER_TAG=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
      - name: Build Docker image
        working-directory: ./${{matrix.service}}
        run: |
          docker build \
            -t europe-west1-docker.pkg.dev/${{ env.gcp_project_id }}/core/${{ matrix.service }}:${{ env.DOCKER_TAG }} \
            .
      - name: Push Docker image (commit-tagged)
        run: docker push europe-west1-docker.pkg.dev/${{ env.gcp_project_id }}/core/${{ matrix.service }}:${{ env.DOCKER_TAG }}
      - name: Push Docker image (latest)
        run: |
          docker tag \
            europe-west1-docker.pkg.dev/${{ env.gcp_project_id }}/core/${{ matrix.service }}:${{ env.DOCKER_TAG }} \
            europe-west1-docker.pkg.dev/${{ env.gcp_project_id }}/core/${{ matrix.service }}:latest && \
            docker push europe-west1-docker.pkg.dev/${{ env.gcp_project_id }}/core/${{ matrix.service }}:latest

  terraform:
    name: 'Terraform Apply'
    needs: deploy-docker
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.4
      - name: Define current infra version
        run: echo "INFRA_VERSION=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
      - name: Terraform Init
        id: init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_TF_SA_CREDENTIALS }}
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_current_version: ${{ env.INFRA_VERSION }}
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_TF_SA_CREDENTIALS }}