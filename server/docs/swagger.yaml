definitions:
  main.BadgeInfo:
    properties:
      color:
        type: string
      label:
        type: string
      message:
        type: string
      schemaVersion:
        type: integer
    type: object
  main.Call:
    properties:
      organisation:
        type: string
      payload:
        type: object
      repository:
        type: string
    type: object
  main.CallsResp:
    properties:
      data:
        items:
          $ref: '#/definitions/main.Call'
        type: array
      error:
        type: string
      query:
        $ref: '#/definitions/main.FilterQuery'
    type: object
  main.FilterQuery:
    properties:
      from_date:
        type: string
      group_by:
        type: string
      key:
        type: string
      organisation:
        type: string
      repository:
        type: string
      to_date:
        type: string
    type: object
  main.RegisterResp:
    properties:
      error:
        type: string
    type: object
host: api.phonehome.dev
info:
  contact:
    name: phomehome.dev
    url: https://github.com/datarootsio/phonehome
  description: KISS telemetry server for FOSS packages.
  license:
    name: MIT
    url: https://github.com/datarootsio/phonehome/LICENSE
  title: phonehome.dev
  version: "1.0"
paths:
  /{organisation}/{repository}:
    get:
      description: Fetch telemetry calls with optional filtering.
      parameters:
      - description: github organisation
        in: path
        name: organisation
        required: true
        type: string
      - description: repository name
        in: path
        name: repository
        required: true
        type: string
      - description: filter by key passed in POST payload
        in: query
        name: key
        type: string
      - description: from date to filter on
        in: query
        name: from_date
        type: string
      - description: to date to filter on
        in: query
        name: to_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.CallsResp'
      summary: Fetch telemetry calls.
    post:
      consumes:
      - application/json
      description: |-
        Register new call.

        Requires a JSON body in the shape of `{"foo": "bar", "coffee": "beans"}`.
      parameters:
      - description: github organisation
        in: path
        name: organisation
        required: true
        type: string
      - description: repository name
        in: path
        name: repository
        required: true
        type: string
      - description: repository name
        in: path
        name: repository
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.RegisterResp'
      summary: Register new telemetry call.
  /{organisation}/{repository}/count:
    get:
      description: Count telemetry calls with optional filtering.
      parameters:
      - description: github organisation
        in: path
        name: organisation
        required: true
        type: string
      - description: repository name
        in: path
        name: repository
        required: true
        type: string
      - description: filter by key passed in POST payload
        in: query
        name: key
        type: string
      - description: from date to filter on
        in: query
        name: from_date
        type: string
      - description: to date to filter on
        in: query
        name: to_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Call'
            type: array
      summary: Count telemetry calls.
  /{organisation}/{repository}/count/badge:
    get:
      description: |-
        Will give back a full count of telemetry calls.
        Check out the documentation at [shields.io](https://shields.io/endpoint) for more details.
      parameters:
      - description: github organisation
        in: path
        name: organisation
        required: true
        type: string
      - description: repository name
        in: path
        name: repository
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BadgeInfo'
      summary: shield.io badge information.
  /{organisation}/{repository}/count/daily:
    get:
      description: Count telemetry calls with optional filtering.
      parameters:
      - description: github organisation
        in: path
        name: organisation
        required: true
        type: string
      - description: repository name
        in: path
        name: repository
        required: true
        type: string
      - description: filter by key passed in POST payload
        in: query
        name: key
        type: string
      - description: from date to filter on
        in: query
        name: from_date
        type: string
      - description: to date to filter on
        in: query
        name: to_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Call'
            type: array
      summary: Count telemetry calls grouped by date.
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
