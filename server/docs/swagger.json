{
    "swagger": "2.0",
    "info": {
        "description": "KISS telemetry server for FOSS packages.",
        "title": "phonehome.dev",
        "contact": {
            "name": "phomehome.dev",
            "url": "https://github.com/datarootsio/phonehome"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/datarootsio/phonehome/LICENSE"
        },
        "version": "1.0"
    },
    "host": "api.phonehome.dev",
    "paths": {
        "/:organisation/:repository": {
            "get": {
                "description": "Fetch telemetry calls with optional filtering.",
                "produces": [
                    "application/json"
                ],
                "summary": "Fetch telemetry calls.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "github organisation",
                        "name": "organisation",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repository name",
                        "name": "repository",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter by key passed in POST payload",
                        "name": "key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date to filter on",
                        "name": "from_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date to filter on",
                        "name": "to_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.CallsResp"
                        }
                    }
                }
            },
            "post": {
                "description": "Register new call.\n\nRequires a JSON body in the shape of `{\"foo\": \"bar\", \"coffee\": \"beans\"}`.",
                "produces": [
                    "application/json"
                ],
                "summary": "Register new telemetry call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "github organisation",
                        "name": "organisation",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repository name",
                        "name": "repository",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.RegisterResp"
                        }
                    }
                }
            }
        },
        "/:organisation/:repository/count": {
            "get": {
                "description": "Count telemetry calls with optional filtering.",
                "produces": [
                    "application/json"
                ],
                "summary": "Count telemetry calls.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "github organisation",
                        "name": "organisation",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repository name",
                        "name": "repository",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter by key passed in POST payload",
                        "name": "key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date to filter on",
                        "name": "from_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date to filter on",
                        "name": "to_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Call"
                            }
                        }
                    }
                }
            }
        },
        "/:organisation/:repository/count/badge": {
            "get": {
                "description": "Will give back a full count of telemetry calls.\nCheck out the documentation at [shields.io](https://shields.io/endpoint) for more details.",
                "produces": [
                    "application/json"
                ],
                "summary": "shield.io badge information.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "github organisation",
                        "name": "organisation",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repository name",
                        "name": "repository",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BadgeInfo"
                        }
                    }
                }
            }
        },
        "/:organisation/:repository/count/daily": {
            "get": {
                "description": "Count telemetry calls with optional filtering.",
                "produces": [
                    "application/json"
                ],
                "summary": "Count telemetry calls grouped by date.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "github organisation",
                        "name": "organisation",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repository name",
                        "name": "repository",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter by key passed in POST payload",
                        "name": "key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date to filter on",
                        "name": "from_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date to filter on",
                        "name": "to_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Call"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.BadgeInfo": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "schemaVersion": {
                    "type": "integer"
                }
            }
        },
        "main.Call": {
            "type": "object",
            "properties": {
                "organisation": {
                    "type": "string"
                },
                "payload": {
                    "type": "object"
                },
                "repository": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "main.CallsResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Call"
                    }
                },
                "error": {
                    "type": "string"
                },
                "query": {
                    "$ref": "#/definitions/main.FilterQuery"
                }
            }
        },
        "main.FilterQuery": {
            "type": "object",
            "properties": {
                "from_date": {
                    "type": "string"
                },
                "group_by": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "organisation": {
                    "type": "string"
                },
                "repository": {
                    "type": "string"
                },
                "to_date": {
                    "type": "string"
                }
            }
        },
        "main.RegisterResp": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}